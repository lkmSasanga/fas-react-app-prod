{"version":3,"sources":["components/Charts/Cards/Card/Card.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","containers/InputControl/InputControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/ProgreessBars/ProgressBar/ProgressBar.module.css","index.module.css","containers/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","components/Charts/Cards/Cards.module.css","containers/Dashboard/Dashboard.module.css","assets/images/logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/UI/Spinner/Spinner.js","components/ProgreessBars/ProgressBar/ProgressBar.js","components/ProgreessBars/ProgressBars.js","components/Charts/DonetChart/DonetChart.js","components/Charts/Cards/Card/Card.js","components/Charts/Cards/Cards.js","containers/RequestData/RequestData.js","containers/InputControl/InputControl.js","containers/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js","components/Charts/DonetChart/DonetChart.module.css"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","jetLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","spinner","loader","ProgressBar","newStyle","styleAdd","opacity","width","battery","progress","progressDone","fontSize","ProgressBars","loaded","features","Cards","PieChartTitle","FeatureLabel","String","featureOne","name","charAt","toUpperCase","slice","positive","featureTwo","featureThree","DonetChart","dataRecieved","chartSize","mainChartData","pos","itemDetails","neg","negative","featuresArray","feature","push","console","log","parseInt","chartComponent","chart","marginTop","marginBottom","marginLeft","marginRight","plotBorderWidth","plotShadow","type","tooltip","pointFormat","plotOptions","pie","showInLegend","innerSize","dataLabels","enabled","distance","color","fontWeight","fontsize","size","series","colorByPoint","data","y","title","text","subtitle","align","floating","responsive","rules","condition","maxWidth","chartsStock","highcharts","Highcharts","options","itemName","item","capitalizedName","ChartsRow","PieChartItemName","PieChart","Card","Title","Value","totalCount","positiveCount","negativeCount","featuresCount","RequestData","items","selectedItem","loading","showChart","extractFeatures","selectedItemName","axios","get","then","response","filteredArray","find","nameOfItem","catch","error","form","Spinner","InputControl","staticName","matchFound","onChangeItemName","e","preventDefault","target","value","onClickHandler","runSentimentDataComponent","itemNameCheck","InputValidation","Heading","SubHeading","onSubmit","autoFocus","required","placeholder","TextInput","onChange","Dashboard","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","body","document","getElementById"],"mappings":"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","file":"static/js/main.8d8139c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__1ouaF\",\"Title\":\"Card_Title__2DXz6\",\"Value\":\"Card_Value__3uaEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1IWHY\",\"Open\":\"SideDrawer_Open__3ohKd\",\"Close\":\"SideDrawer_Close__2I6QL\",\"Logo\":\"SideDrawer_Logo__yvfwA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"InputControl_Content__2tyXg\",\"Button\":\"InputControl_Button__1jQwE\",\"TextInput\":\"InputControl_TextInput__iQLZg\",\"InputValidation\":\"InputControl_InputValidation__1NXfQ\",\"Heading\":\"InputControl_Heading__2dYPp\",\"SubHeading\":\"InputControl_SubHeading__18Fr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__OCotS\",\"Logo\":\"Toolbar_Logo__1XHNt\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2SRfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__CqOSc\",\"active\":\"NavigationItem_active__1Zz9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"ProgressBar_progress__Mvugw\",\"progressDone\":\"ProgressBar_progressDone__3ZojZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"src_body__3VVQy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__bV6_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__18-us\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2OykJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1-rq_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__jJGaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3RwcI\",\"load1\":\"Spinner_load1__2fnOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__1nwhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard_Dashboard__1VW8m\"};","export default __webpack_public_path__ + \"static/media/logo.e6be3598.png\";","import React from 'react';\r\n\r\nimport jetLogo from '../../assets/images/logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div className={classes.Logo} style={{height: props.height}}>\r\n            <img src={jetLogo} alt=\"MyLogo\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n            <li className={classes.NavigationItem}>\r\n                <NavLink\r\n                    to={props.link}\r\n                    exact={props.exact}\r\n                    activeClassName={classes.active}\r\n                >\r\n                    {props.children}\r\n                </NavLink>\r\n            </li>\r\n    )\r\n\r\n};\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link=\"/\" exact >Home</NavigationItem>\r\n            <NavigationItem link=\"/dashboard\">Dashboard</NavigationItem>\r\n\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return(\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked}/>\r\n            <Logo height=\"80%\"/>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems/>\r\n            </nav>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n// import Aux from '../../../hoc/Aux/Aux';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open]\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <hr/>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </React.Fragment>\r\n\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from \"react\";\r\n\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false});\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !this.state.showSideDrawer };\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n                {/*<hr style={{marginTop: \"100vh\", opacity: \"0\"}}/>*/}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\nconst spinner = () => (\r\n    <div className={classes.loader}>Loading...</div>\r\n)\r\n// color 00C7FD\r\n\r\nexport default spinner;","import classes from './ProgressBar.module.css'\r\nimport React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component{\r\n    // const [style, setStyle] = useState({});\r\n\r\n    // setTimeout(() => {\r\n    //     const newStyle = {\r\n    //         opacity: 1,\r\n    //         width: `${props.battery}%`\r\n    //     }\r\n    //\r\n    //     setStyle(newStyle);\r\n    // }, );\r\n    state = {\r\n        newStyle: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const styleAdd = {\r\n            opacity: 1,\r\n            width: `${this.props.battery}%`\r\n        }\r\n        this.setState({newStyle: styleAdd})\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className={classes.progress}>\r\n                <div className={classes.progressDone} style={this.state.newStyle}>\r\n                    <div style={{fontSize:'15px'}}>\r\n                        {this.props.battery}%\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProgressBar\r\n","import React, {Component} from \"react\";\r\nimport classes from \"../Charts/DonetChart/DonetChart.module.css\";\r\nimport ProgressBar from \"./ProgressBar/ProgressBar\";\r\n\r\nclass ProgressBars extends Component {\r\n    state = {\r\n        loaded: false,\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.features) {\r\n            this.setState({loaded: true})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log('loading...', this.state.loaded)\r\n\r\n        return(\r\n            <div>\r\n                {this.props.features ?\r\n                    <div className={classes.Cards}>\r\n                    <p className={classes.PieChartTitle}>Feature Report</p>\r\n                    <br/>\r\n                    <div>\r\n                        <p className={classes.FeatureLabel}>{\r\n                            String(this.props.features.featureOne.name).charAt(0).toUpperCase() +\r\n                            String(this.props.features.featureOne.name).slice(1)\r\n                        }</p>\r\n                        <div className={classes.ProgressBar}>\r\n                            <ProgressBar battery={this.props.features.featureOne.positive}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p className={classes.FeatureLabel}>{\r\n                            String(this.props.features.featureTwo.name).charAt(0).toUpperCase() +\r\n                            String(this.props.features.featureTwo.name).slice(1)\r\n                        }</p>\r\n                        <div className={classes.ProgressBar}>\r\n                            <ProgressBar battery={this.props.features.featureTwo.positive}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <p className={classes.FeatureLabel}>{\r\n                            String(this.props.features.featureThree.name).charAt(0).toUpperCase() +\r\n                            String(this.props.features.featureThree.name).slice(1)\r\n                        }</p>\r\n                        <div className={classes.ProgressBar}>\r\n                            <ProgressBar battery={this.props.features.featureThree.positive}/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProgressBars\r\n","import React, {Component} from 'react';\r\n\r\nimport classes from './DonetChart.module.css';\r\n\r\nimport ProgressBar from '../../ProgreessBars/ProgressBar/ProgressBar'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport ProgressBars from \"../../ProgreessBars/ProgressBars\";\r\n\r\nclass DonetChart extends Component{\r\n    state = {\r\n        dataRecieved: false,\r\n        chartSize: 80,\r\n        mainChartData: {\r\n            pos: this.props.itemDetails.positive,\r\n            neg: this.props.itemDetails.negative\r\n        },\r\n        featureOne: {\r\n            name: this.props.itemDetails.features,\r\n            pos: null,\r\n            neg: null\r\n        },\r\n        featureTwo: {\r\n            name: '',\r\n            pos: null,\r\n            neg: null\r\n        },\r\n        featuresArray: [],\r\n        features: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.runChart();\r\n        // let chartView = (<HighchartsReact\r\n        //     highcharts = { Highcharts }\r\n        //     options = { this.chartComponent }\r\n        // />)\r\n        // this.extractFeatureData();\r\n        this.setState({dataRecieved: true})\r\n        this.setState({features: this.props.itemDetails.features})\r\n\r\n        const featuresArray = [];\r\n        for (let feature in this.state.features) {\r\n            featuresArray.push({\r\n                name: this.state.features[feature].name,\r\n                pos: this.state.features[feature].positive,\r\n                neg: this.state.features[feature].negative\r\n            })\r\n        }\r\n        this.setState({featuresArray: featuresArray})\r\n\r\n        // console.log('features array ', this.state.featuresArray[0].name)\r\n        // console.log('features array ', this.state.featuresArray[0].pos)\r\n        // console.log('features array ', this.state.featuresArray[0].neg)\r\n\r\n        console.log(this.state.features)\r\n\r\n\r\n\r\n        // this.setState({\r\n        //     featureOne: {\r\n        //         name: this.state.featuresArray[0].name,\r\n        //         pos: this.state.featuresArray[0].pos\r\n        //     },\r\n\r\n        // })\r\n        // console.log(this.state.featuresArray[0].name)\r\n        // console.log(this.state.featuresArray[0].pos)\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.setState({dataRecieved: false})\r\n    // }\r\n\r\n\r\n    render (props) {\r\n\r\n        // if (this.state.featuresArray) {\r\n        //     console.log('features array ', this.state.featuresArray[0].name)\r\n        //     console.log('features array ', this.state.featuresArray[0].pos)\r\n        //     console.log('features array ', this.state.featuresArray[0].neg)\r\n        // }\r\n\r\n        // let passiveIfSupported = false;\r\n        //\r\n        // try {\r\n        //     window.addEventListener(\"test\", null,\r\n        //         Object.defineProperty(\r\n        //             {},\r\n        //             \"passive\",\r\n        //             {\r\n        //                 get: function() { passiveIfSupported = { passive: true }; }\r\n        //             }\r\n        //         )\r\n        //     );\r\n        // } catch(err) {}\r\n        //\r\n        // window.addEventListener('scroll', function(event) {\r\n        //     /* do something */\r\n        //     // can't use event.preventDefault();\r\n        //     // event.preventDefault()\r\n        // }, passiveIfSupported );\r\n\r\n\r\n        var pos = parseInt(this.props.itemDetails.positive)\r\n        var neg = parseInt(this.props.itemDetails.negative)\r\n\r\n        const chartComponent = {\r\n        chart: {\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            marginLeft: 0,\r\n            marginRight: 0,\r\n            height: 330,\r\n            width: 300,\r\n            // plotBackgroundColor: '#e1ffff',\r\n                plotBorderWidth: null,\r\n                plotShadow: false,\r\n                type: \"pie\",\r\n            style: {\r\n                'float': 'right',\r\n                // 'font-family': 'Poppins, sans serif',\r\n    }\r\n\r\n        },\r\n        tooltip: {\r\n            pointFormat: \"<b>{point.y} %</b>\"\r\n        },\r\n        plotOptions: {\r\n            pie: {\r\n                showInLegend: true,\r\n                    innerSize: \"60%\",\r\n                    dataLabels: {\r\n                    enabled: false,\r\n                        distance: -14,\r\n                        color: \"white\",\r\n                        style: {\r\n                        fontWeight: \"bold\",\r\n                            fontsize: 50\r\n                    }\r\n                },\r\n                size: `${this.state.chartSize}%`\r\n            }\r\n        },\r\n        series: [{\r\n            name: 'Sentiment',\r\n            colorByPoint: true,\r\n            data: [{\r\n                name: 'Positive',\r\n                y: pos,\r\n                color: '#40A4C8'\r\n            },\r\n                {\r\n                    name: 'Negative',\r\n                    y: neg\r\n                }\r\n            ]\r\n        }],\r\n            title: {\r\n            // text: `Sentiment Analyzed data of ${this.props.itemDetails.item}`\r\n            text: ``\r\n        },\r\n        subtitle: {\r\n            text: pos + '%' ,\r\n                style: {\r\n                fontSize: 14,\r\n                    fontWeight: \"bold\",\r\n                    align: 'center',\r\n                    floating: true,\r\n                    color: \"#000000\"\r\n            },\r\n            y: 150\r\n        },\r\n            responsive: {\r\n                rules: [{\r\n                    condition: {\r\n                        maxWidth: 499\r\n                    },\r\n                    // chartOptions: {\r\n                    //     align: 'center',\r\n                    //     size: '90%',\r\n                    // },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            size: '90%'\r\n                        }\r\n                    },\r\n                }]\r\n            }\r\n\r\n    }\r\n    // let chartView = this.props.itemDetails ?\r\n    //\r\n    // if (this.props.itemDetails) {\r\n    //     chartView = (\r\n    //         <HighchartsReact\r\n    //         highcharts = { Highcharts }\r\n    //         options = { this.chartComponent }\r\n    //     />\r\n    //     )\r\n    // }\r\n\r\n    // console.log('from donetChart ', this.props.itemDetails.item)\r\n\r\n\r\n        let chartsStock = (\r\n            <div className={classes.DonetChart}>\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={chartComponent}\r\n                />\r\n            </div>\r\n        )\r\n\r\n        const itemName = String(this.props.itemDetails.item)\r\n        const capitalizedName = itemName.charAt(0).toUpperCase() + itemName.slice(1)\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.ChartsRow}>\r\n                    <div className={classes.Cards}>\r\n                        <p className={classes.PieChartTitle}>Overall Report</p>\r\n                        <p className={classes.PieChartItemName}>{capitalizedName}</p>\r\n                        <div className={classes.PieChart}>{chartsStock}</div>\r\n                    </div>\r\n\r\n                    <ProgressBars features={this.props.itemDetails.features}/>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default DonetChart;\r\n","import React from \"react\";\r\nimport classes from './Card.module.css'\r\n// import Chart from '../../../Charts/DonetChart/DonetChart'\r\n// import DonetChart from \"../../../Charts/DonetChart/DonetChart\";\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { f036 } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Card = (props) => {\r\n  return (\r\n      <>\r\n          <div className={classes.Card}>\r\n              {/*<i className=\"fas fa-align-left\"></i>*/}\r\n              {/*<FontAwesomeIcon icon={f036} />*/}\r\n              <p className={classes.Title}>Feedbacks</p>\r\n              <p className={classes.Value}>{props.data.totalCount}</p>\r\n          </div>\r\n\r\n          <div className={classes.Card} >\r\n              <p className={classes.Title} >Positive</p>\r\n              <p className={classes.Value} style={{color: \"#38e1b0\"}}>{props.data.positiveCount}</p>\r\n          </div>\r\n\r\n          <div className={classes.Card}>\r\n              <p className={classes.Title} >Negative</p>\r\n              <p className={classes.Value} style={{color: \"#f65a6f\"}}>{props.data.negativeCount}</p>\r\n          </div>\r\n\r\n          <div className={classes.Card}>\r\n              <p className={classes.Title}>Features</p>\r\n              <p className={classes.Value} style={{color: \"#efa40f\"}}>{props.data.featuresCount}</p>\r\n          </div>\r\n\r\n          <div>\r\n              {/*<Chart/>*/}\r\n              {/*<Chart className=\"col-md-6\" itemDetails={this.state.selectedItem}/>*/}\r\n\r\n          </div>\r\n\r\n      </>\r\n\r\n  )\r\n};\r\n\r\nexport default Card;\r\n","// import classes from './Card.module.css'\r\nimport React from \"react\";\r\n// import ProgressBar from \"../../ProgressBar/ProgressBar\";\r\nimport Card from './Card/Card'\r\n\r\nimport classes from './Cards.module.css'\r\n\r\nconst Cards = (props) => {\r\n    console.log('from cards')\r\n    return (\r\n        <div className={classes.Cards}>\r\n            {/*<Card>*/}\r\n            {/*    <p>Total Read</p>*/}\r\n            {/*</Card>*/}\r\n            <Card data={props.itemDetails}/>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n// import ChartDashboard from \"../../components/Charts/ChartDashboard/ChartDashboard\";\r\nimport DonetChart from '../../components/Charts/DonetChart/DonetChart';\r\nimport Cards from '../../components/Charts/Cards/Cards';\r\n\r\n// import Highcharts from 'highcharts'\r\n// import HighchartsReact from 'highcharts-react-official'\r\n\r\n// import DataProcessing, {\r\n//     overallItem,\r\n//     featureOne,\r\n//     featureTwo,\r\n//     featureThree\r\n// } from \"../../components/Charts/DataProcessing\";\r\n// import Dashboard from \"../Dashboard/Dashboard\";\r\n\r\nclass RequestData extends Component {\r\n\r\n        state = {\r\n            name: '',\r\n            items: [],\r\n            selectedItem: {},\r\n            loading: false,\r\n            showChart: true,\r\n            featuresArray: [],\r\n            // overallItem: [\r\n            //     { name: \"negative\", y: parseInt(this.state.selectedItem.negative) },\r\n            //     { name: \"positive\", y: parseInt(this.state.selectedItem.positive) }\r\n            //     ],\r\n            // featureOne: [\r\n            //     { name: \"negative\", y: 20 },\r\n            //     { name: \"positive\", y: 80 }\r\n            // ],\r\n            // featureTwo: [\r\n            //     { name: \"negative\", y: 45 },\r\n            //     { name: \"positive\", y: 55 }\r\n            // ],\r\n            // featureThree: [\r\n            //     { name: \"negative\", y: 90 },\r\n            //     { name: \"positive\", y: 10 }\r\n            // ]\r\n        };\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true})\r\n\r\n        // url which is node output the data\r\n\r\n        const selectedItemName = this.props.name\r\n\r\n        axios.get('https://malindu-fas.herokuapp.com/')\r\n            .then(response => {\r\n                // filtering\r\n                const outputArrayObject = response.data\r\n                const filteredArray = outputArrayObject.find(nameOfItem => nameOfItem.item === selectedItemName)\r\n                console.log(filteredArray)\r\n\r\n                this.setState({loading: false, showChart: true})\r\n                // const runChart = () => {return }\r\n                this.setState({\r\n                    items: response.data,\r\n                    selectedItem: filteredArray\r\n                })\r\n                console.log(this.state.selectedItem.name)\r\n                // console.log(this.state.featuresArray)\r\n\r\n                // this.defineData();\r\n            })\r\n\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n\r\n        // from charts\r\n        // DataProcessing();\r\n        // this.copyDataSeries();\r\n    }\r\n\r\n    // defineData = () => {\r\n    //     console.log('selected item : chartData',this.state.selectedItem.negative)\r\n    //\r\n    //     let pos = parseInt(this.state.selectedItem.positive)\r\n    //     let neg = parseInt(this.state.selectedItem.negative)\r\n\r\n        // let overallItem = [\r\n        //     { name: \"negative\", y: neg },\r\n        //     { name: \"positive\", y: pos }\r\n        // ];\r\n        //\r\n        // let featureOne = [\r\n        //     { name: \"negative\", y: 20 },\r\n        //     { name: \"positive\", y: 80 }\r\n        // ];\r\n        //\r\n        // let featureTwo = [\r\n        //     { name: \"negative\", y: 45 },\r\n        //     { name: \"positive\", y: 55 }\r\n        // ];\r\n        //\r\n        // let featureThree = [\r\n        //     { name: \"negative\", y: 90 },\r\n        //     { name: \"positive\", y: 10 }\r\n        // ];\r\n\r\n    // }\r\n\r\n    // copyDataSeries = (obj = {}) => {\r\n    //     this.setState({\r\n    //         charts: [\r\n    //             { serie: this.state.overallItem, title: `Overall ${this.props.name}`},\r\n    //             { serie: this.state.featureOne, title: `${this.props.name}: battery` },\r\n    //             { serie: this.state.featureTwo, title: `${this.props.name}: display` },\r\n    //             { serie: this.state.featureThree, title: `Gender` }\r\n    //         ],\r\n    //         chartData: this.state.selectedItem\r\n    //     });\r\n    // };\r\n\r\n    extractFeatures = () => {\r\n        // if (this.state.loading) {\r\n            for (let feature in this.props.itemDetails.features) {\r\n                this.state.featuresArray.push({\r\n                    name: this.state.selectedItem.features[feature].name,\r\n                    pos: this.state.selectedItem.features[feature].positive,\r\n                    neg: this.state.selectedItem.features[feature].negative\r\n                })\r\n            }\r\n            console.log('fetures array ', this.state.selectedItem.features[0])\r\n            console.log('fetures ....... ', this.state.featuresArray)\r\n\r\n        // }\r\n    }\r\n\r\n    render() {\r\n\r\n        // console.log('req......', this.state.selectedItem.features )\r\n        // console.log('req......', this.state.selectedItem.features.featureOne )\r\n\r\n        let form = null\r\n\r\n        if (this.state.loading) {\r\n            form = <Spinner/>\r\n        } else if(!this.state.loading){\r\n            form = (\r\n                <div>\r\n                    <br/>\r\n                    <Cards itemDetails={this.state.selectedItem}/>\r\n                    <DonetChart className=\"col-md-6\" itemDetails={this.state.selectedItem}/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        // let showingChart = (\r\n        //     <HighchartsReact className = \"col-md-6\"\r\n        //                      highcharts = { Highcharts }\r\n        //         // options = { batteryOptions }\r\n        //     />\r\n        // )\r\n        //\r\n        // if(this.state.showChart) {\r\n        //    showingChart =\r\n        // }\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {form}\r\n                {/*{*/}\r\n                {/*    this.state.showChart ?  <ChartDashboard/> : null*/}\r\n                {/*}*/}\r\n\r\n                {/*<HighchartsReact highcharts = { Highcharts }*/}\r\n                {/*                 options = { itemOptions }*/}\r\n                {/*/>*/}\r\n                <br/>\r\n\r\n                { this.state.showChart ?\r\n                    <div className=\"row\">\r\n                        {/*<HighchartsReact*/}\r\n                        {/*    className=\"col-md-6\"*/}\r\n                        {/*    highcharts={Highcharts}*/}\r\n                        {/*    options = { itemOptions }*/}\r\n                        {/*/>*/}\r\n\r\n                        {/*<DonetChart className=\"col-md-6\" itemDetails={this.state.selectedItem}/>*/}\r\n\r\n\r\n                    </div> : null\r\n                }\r\n\r\n                {/*<ChartDashboard charts={this.state.charts} chartData={this.state.selectedItem}/>*/}\r\n\r\n            </React.Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RequestData;\r\n","import React, {Component} from \"react\";\r\nimport classes from './InputControl.module.css';\r\n\r\nimport ItemNameOutput from '../RequestData/RequestData';\r\n\r\nclass InputControl extends Component {\r\n    state = {\r\n        itemName: '',\r\n        staticName: '',\r\n        matchFound: false,\r\n        clicked: false\r\n    }\r\n\r\n    onChangeItemName = (e) =>{\r\n        e.preventDefault()\r\n        this.setState({\r\n            itemName: e.target.value\r\n        })\r\n    }\r\n\r\n    // onSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //\r\n    //     console.log('on submit : ',this.state)\r\n    //\r\n    //     const data = this.state\r\n    //     console.log(\"Final data is : \",data)\r\n    //     return (<p>Item name is: {this.state.itemName}</p>)\r\n    // }\r\n\r\n    componentDidMount() {\r\n        // this.setState({\r\n        //     itemName: ''\r\n        // })\r\n        // return ( <ItemNameOutput name={this.state.itemName}/>)\r\n    }\r\n\r\n    onClickHandler = () => {\r\n        this.setState({clicked: true})\r\n    }\r\n\r\n    runSentimentDataComponent = () => {\r\n        const itemNameCheck = this.state.itemName\r\n        if(itemNameCheck === 'tv' || itemNameCheck === 'phone' || itemNameCheck === 'laptop'){\r\n            // this.setState({staticName: itemNameCheck})\r\n            // console.log('Static name : ' , this.state.staticName)\r\n            return (\r\n                <div>\r\n                    {/*{this.setState({matchFound: true})}*/}\r\n                    <ItemNameOutput name={this.state.itemName}/>\r\n                </div>\r\n            )\r\n        } else {\r\n\r\n            return (\r\n                <>\r\n                    {this.state.clicked ?\r\n                        <p className={classes.InputValidation}>Please enter valid item name</p> : null\r\n                    }\r\n                </>\r\n\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log('from input control')\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.Content}>\r\n                    {/*{!this.state.itemName ?*/}\r\n                    <div>\r\n                        <h2  className={classes.Heading}>Search Anything</h2>\r\n                        <h3 className={classes.SubHeading}>We Read For You</h3>\r\n                    </div>\r\n                    {/*}*/}\r\n\r\n                    <form onSubmit={this.onChangeItemName}>\r\n                            {/*<p>Items available: tv, phone </p>*/}\r\n                            <input  type=\"text\"\r\n                                    autoFocus\r\n                                    required\r\n                                    placeholder=\"Enter item Name\"\r\n                                    // name='itemName'\r\n                                    className={classes.TextInput}\r\n                                    // defaultValue={this.state.itemName}\r\n                                    onChange={this.onChangeItemName}\r\n                                    onClick={this.onClickHandler}\r\n                            />\r\n\r\n                        {/*<button className={classes.Button}>Search</button>*/}\r\n                        {/*{this.state.clicked ? <p>Clcdfhg</p> : null}*/}\r\n                    </form>\r\n                    {/*<p>{this.state.itemName}</p>*/}\r\n                    {  this.runSentimentDataComponent()}\r\n                    {/*{ this.runSentimentDataComponent}*/}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default InputControl;\r\n","import React, {Component} from 'react';\r\nimport {} from 'react-router-dom';\r\n\r\nimport classes from './Dashboard.module.css';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.Dashboard}>\r\n                    <h1>Dashboard</h1>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, {Component} from 'react';\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport './App.css';\r\nimport Layout from './containers/Layout/Layout';\r\nimport InputControl from './containers/InputControl/InputControl';\r\nimport Dashboard from \"./containers/Dashboard/Dashboard\";\r\n\r\nclass App extends Component{\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Route>\r\n                    <div className=\"App\">\r\n                        <Layout>\r\n                            <Switch>\r\n                                <Route path=\"/dashboard\" component={Dashboard}/>\r\n                                <Route path=\"/\" component={InputControl}/>\r\n                            </Switch>\r\n                        </Layout>\r\n                    </div>\r\n\r\n\r\n                </Route>\r\n\r\n            </BrowserRouter>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classes from './index.module.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'font-awesome/css/font-awesome.min.css';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <div className={classes.body}>\r\n            <App />\r\n        </div>\r\n    </React.Fragment>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DonetChart\":\"DonetChart_DonetChart__3sfWU\",\"Cards\":\"DonetChart_Cards__2QiaN\",\"ChartsRow\":\"DonetChart_ChartsRow__gPdOd\",\"PieChartTitle\":\"DonetChart_PieChartTitle__2q_sY\",\"PieChartItemName\":\"DonetChart_PieChartItemName__11-VW\",\"PieChart\":\"DonetChart_PieChart__2flOi\",\"FeatureLabel\":\"DonetChart_FeatureLabel__1c437\",\"ProgressBar\":\"DonetChart_ProgressBar__KzD-U\"};"],"sourceRoot":""}